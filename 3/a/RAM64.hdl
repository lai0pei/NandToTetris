// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=load,sel=address[0..2],a=ram1,b=ram2,c=ram3,d=ram4,e=ram5,f=ram6,g=ram7,h=ram8);
    RAM8(in=in,load=ram1,address=address[3..5],out=ramo1);
    RAM8(in=in,load=ram2,address=address[3..5],out=ramo2);
    RAM8(in=in,load=ram3,address=address[3..5],out=ramo3);
    RAM8(in=in,load=ram4,address=address[3..5],out=ramo4);
    RAM8(in=in,load=ram5,address=address[3..5],out=ramo5);
    RAM8(in=in,load=ram6,address=address[3..5],out=ramo6);
    RAM8(in=in,load=ram7,address=address[3..5],out=ramo7);
    RAM8(in=in,load=ram8,address=address[3..5],out=ramo8);
    Mux8Way16(a=ramo1,b=ramo2,c=ramo3,d=ramo4,e=ramo5,f=ramo6,g=ramo7,h=ramo8,sel=address[0..2],out=out);

}
